{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n/**\n * API service for communicating with the backend\n */\nclass ApiService {\n  // AI Tools endpoints\n  async getAITools() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch AI tools');\n      }\n    } catch (error) {\n      console.error('Error fetching AI tools:', error);\n      throw error;\n    }\n  }\n  async getAITool(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${id}`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch AI tool');\n      }\n    } catch (error) {\n      console.error('Error fetching AI tool:', error);\n      throw error;\n    }\n  }\n  async getRedditReviews(toolId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${toolId}/reddit-reviews`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch Reddit reviews');\n      }\n    } catch (error) {\n      console.error('Error fetching Reddit reviews:', error);\n      throw error;\n    }\n  }\n  async refreshReviews(toolId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${toolId}/refresh-reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        return data;\n      } else {\n        throw new Error(data.error || 'Failed to refresh reviews');\n      }\n    } catch (error) {\n      console.error('Error refreshing reviews:', error);\n      throw error;\n    }\n  }\n\n  // Luxury Appliances endpoints\n  async getLuxeAppliances() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliances');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliances:', error);\n      throw error;\n    }\n  }\n  async getLuxeAppliance(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${id}`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliance');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliance:', error);\n      throw error;\n    }\n  }\n  async getLuxeReviews(applianceId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${applianceId}/reviews`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliance reviews');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliance reviews:', error);\n      throw error;\n    }\n  }\n  async refreshLuxeReviews(applianceId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${applianceId}/refresh-reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (data.success) {\n        return data;\n      } else {\n        throw new Error(data.error || 'Failed to refresh luxury appliance reviews');\n      }\n    } catch (error) {\n      console.error('Error refreshing luxury appliance reviews:', error);\n      throw error;\n    }\n  }\n  async getDesignInsights() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/design-insights`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch design insights');\n      }\n    } catch (error) {\n      console.error('Error fetching design insights:', error);\n      throw error;\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","getAITools","response","fetch","data","json","success","Error","error","console","getAITool","id","getRedditReviews","toolId","refreshReviews","method","headers","getLuxeAppliances","getLuxeAppliance","getLuxeReviews","applianceId","refreshLuxeReviews","getDesignInsights"],"sources":["/Users/alessandroledesma/Development/project-insights/insight-engine/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n/**\n * API service for communicating with the backend\n */\nclass ApiService {\n  // AI Tools endpoints\n  async getAITools() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch AI tools');\n      }\n    } catch (error) {\n      console.error('Error fetching AI tools:', error);\n      throw error;\n    }\n  }\n\n  async getAITool(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${id}`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch AI tool');\n      }\n    } catch (error) {\n      console.error('Error fetching AI tool:', error);\n      throw error;\n    }\n  }\n\n  async getRedditReviews(toolId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${toolId}/reddit-reviews`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch Reddit reviews');\n      }\n    } catch (error) {\n      console.error('Error fetching Reddit reviews:', error);\n      throw error;\n    }\n  }\n\n  async refreshReviews(toolId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/ai-tools/${toolId}/refresh-reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (data.success) {\n        return data;\n      } else {\n        throw new Error(data.error || 'Failed to refresh reviews');\n      }\n    } catch (error) {\n      console.error('Error refreshing reviews:', error);\n      throw error;\n    }\n  }\n\n  // Luxury Appliances endpoints\n  async getLuxeAppliances() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliances');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliances:', error);\n      throw error;\n    }\n  }\n\n  async getLuxeAppliance(id) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${id}`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliance');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliance:', error);\n      throw error;\n    }\n  }\n\n  async getLuxeReviews(applianceId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${applianceId}/reviews`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch luxury appliance reviews');\n      }\n    } catch (error) {\n      console.error('Error fetching luxury appliance reviews:', error);\n      throw error;\n    }\n  }\n\n  async refreshLuxeReviews(applianceId) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/${applianceId}/refresh-reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (data.success) {\n        return data;\n      } else {\n        throw new Error(data.error || 'Failed to refresh luxury appliance reviews');\n      }\n    } catch (error) {\n      console.error('Error refreshing luxury appliance reviews:', error);\n      throw error;\n    }\n  }\n\n  async getDesignInsights() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/luxe-appliances/design-insights`);\n      const data = await response.json();\n      if (data.success) {\n        return data.data;\n      } else {\n        throw new Error(data.error || 'Failed to fetch design insights');\n      }\n    } catch (error) {\n      console.error('Error fetching design insights:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new ApiService(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}